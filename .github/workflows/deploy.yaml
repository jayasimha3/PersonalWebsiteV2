name: Deploy Build

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to Github Pages'
        required: true
        default: true
        type: boolean
      docker:
        description: 'Build Docker Image'
        required: true
        default: true
        type: boolean
      tag:
        description: 'Release Tag, will be used by Docker if selected'
        required: false
        default: "v2.1"
        type: string
  push:
    branches:
      - 'main'
    paths:
      - 'src/*'
      - '**.json'

env:
  ARTIFACT_NAME: ${{ vars.BUILD_ARTIFACT_NAME }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG: ${{ inputs.tag }}

jobs:
  build:
    uses: ./.github/workflows/build.yaml
    with:
      deploy: false
      docker: true
      tag: ${{ inputs.TAG }}
  pages:
    runs-on: github-actions-runner-self-hosted-k8s-pw
    needs: build
    if: ${{ inputs.deploy == true }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Download Build
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload Pages Build
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment
  docker:
    runs-on: github-actions-runner-self-hosted-k8s-pw
    needs: build
    if: ${{ inputs.docker == true }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Trigger Type
        run: "echo ${{ github.event.action }}"
      - name: Checkout Main
        uses: actions/checkout@v4
      - name: Download Build
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=raw,value=${{env.TAG}}
            type=sha
          labels: |
            maintainer={{ github.actor }}
            org.opencontainers.image.title={{ github.repository }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        id: push
        with:
          context: .
          file: ./dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
